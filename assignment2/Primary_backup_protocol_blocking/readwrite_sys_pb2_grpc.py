# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import readwrite_sys_pb2 as readwrite__sys__pb2


class RegistryServiceStub(object):
    """-------------------- Registry Server Service -------------------- //

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterServer = channel.unary_unary(
                '/readwrite_system.RegistryService/RegisterServer',
                request_serializer=readwrite__sys__pb2.RegisterServerRequest.SerializeToString,
                response_deserializer=readwrite__sys__pb2.RegisterServerResponse.FromString,
                )
        self.GetReplicaList = channel.unary_unary(
                '/readwrite_system.RegistryService/GetReplicaList',
                request_serializer=readwrite__sys__pb2.GetReplicaListRequest.SerializeToString,
                response_deserializer=readwrite__sys__pb2.GetReplicaListResponse.FromString,
                )


class RegistryServiceServicer(object):
    """-------------------- Registry Server Service -------------------- //

    """

    def RegisterServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReplicaList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RegistryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterServer': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterServer,
                    request_deserializer=readwrite__sys__pb2.RegisterServerRequest.FromString,
                    response_serializer=readwrite__sys__pb2.RegisterServerResponse.SerializeToString,
            ),
            'GetReplicaList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReplicaList,
                    request_deserializer=readwrite__sys__pb2.GetReplicaListRequest.FromString,
                    response_serializer=readwrite__sys__pb2.GetReplicaListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'readwrite_system.RegistryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RegistryService(object):
    """-------------------- Registry Server Service -------------------- //

    """

    @staticmethod
    def RegisterServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/readwrite_system.RegistryService/RegisterServer',
            readwrite__sys__pb2.RegisterServerRequest.SerializeToString,
            readwrite__sys__pb2.RegisterServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReplicaList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/readwrite_system.RegistryService/GetReplicaList',
            readwrite__sys__pb2.GetReplicaListRequest.SerializeToString,
            readwrite__sys__pb2.GetReplicaListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ServerServiceStub(object):
    """----------------------------------- Server -------------------------------- //

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.write = channel.unary_unary(
                '/readwrite_system.ServerService/write',
                request_serializer=readwrite__sys__pb2.WriteRequest.SerializeToString,
                response_deserializer=readwrite__sys__pb2.WriteResponse.FromString,
                )
        self.write_PRtoRepl = channel.unary_unary(
                '/readwrite_system.ServerService/write_PRtoRepl',
                request_serializer=readwrite__sys__pb2.WritePRtoReplRequest.SerializeToString,
                response_deserializer=readwrite__sys__pb2.WritePRtoReplResponse.FromString,
                )
        self.read = channel.unary_unary(
                '/readwrite_system.ServerService/read',
                request_serializer=readwrite__sys__pb2.ReadRequest.SerializeToString,
                response_deserializer=readwrite__sys__pb2.ReadResponse.FromString,
                )
        self.delete = channel.unary_unary(
                '/readwrite_system.ServerService/delete',
                request_serializer=readwrite__sys__pb2.DeleteRequest.SerializeToString,
                response_deserializer=readwrite__sys__pb2.DeleteResponse.FromString,
                )
        self.delete_PRtoRepl = channel.unary_unary(
                '/readwrite_system.ServerService/delete_PRtoRepl',
                request_serializer=readwrite__sys__pb2.DeletePRtoRepl.SerializeToString,
                response_deserializer=readwrite__sys__pb2.DeleteResponse.FromString,
                )
        self.NotifyPrimary = channel.unary_unary(
                '/readwrite_system.ServerService/NotifyPrimary',
                request_serializer=readwrite__sys__pb2.NotifyPrimaryRequest.SerializeToString,
                response_deserializer=readwrite__sys__pb2.NotifyPrimaryResponse.FromString,
                )


class ServerServiceServicer(object):
    """----------------------------------- Server -------------------------------- //

    """

    def write(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def write_PRtoRepl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_PRtoRepl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyPrimary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'write': grpc.unary_unary_rpc_method_handler(
                    servicer.write,
                    request_deserializer=readwrite__sys__pb2.WriteRequest.FromString,
                    response_serializer=readwrite__sys__pb2.WriteResponse.SerializeToString,
            ),
            'write_PRtoRepl': grpc.unary_unary_rpc_method_handler(
                    servicer.write_PRtoRepl,
                    request_deserializer=readwrite__sys__pb2.WritePRtoReplRequest.FromString,
                    response_serializer=readwrite__sys__pb2.WritePRtoReplResponse.SerializeToString,
            ),
            'read': grpc.unary_unary_rpc_method_handler(
                    servicer.read,
                    request_deserializer=readwrite__sys__pb2.ReadRequest.FromString,
                    response_serializer=readwrite__sys__pb2.ReadResponse.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=readwrite__sys__pb2.DeleteRequest.FromString,
                    response_serializer=readwrite__sys__pb2.DeleteResponse.SerializeToString,
            ),
            'delete_PRtoRepl': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_PRtoRepl,
                    request_deserializer=readwrite__sys__pb2.DeletePRtoRepl.FromString,
                    response_serializer=readwrite__sys__pb2.DeleteResponse.SerializeToString,
            ),
            'NotifyPrimary': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyPrimary,
                    request_deserializer=readwrite__sys__pb2.NotifyPrimaryRequest.FromString,
                    response_serializer=readwrite__sys__pb2.NotifyPrimaryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'readwrite_system.ServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServerService(object):
    """----------------------------------- Server -------------------------------- //

    """

    @staticmethod
    def write(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/readwrite_system.ServerService/write',
            readwrite__sys__pb2.WriteRequest.SerializeToString,
            readwrite__sys__pb2.WriteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def write_PRtoRepl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/readwrite_system.ServerService/write_PRtoRepl',
            readwrite__sys__pb2.WritePRtoReplRequest.SerializeToString,
            readwrite__sys__pb2.WritePRtoReplResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/readwrite_system.ServerService/read',
            readwrite__sys__pb2.ReadRequest.SerializeToString,
            readwrite__sys__pb2.ReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/readwrite_system.ServerService/delete',
            readwrite__sys__pb2.DeleteRequest.SerializeToString,
            readwrite__sys__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_PRtoRepl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/readwrite_system.ServerService/delete_PRtoRepl',
            readwrite__sys__pb2.DeletePRtoRepl.SerializeToString,
            readwrite__sys__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotifyPrimary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/readwrite_system.ServerService/NotifyPrimary',
            readwrite__sys__pb2.NotifyPrimaryRequest.SerializeToString,
            readwrite__sys__pb2.NotifyPrimaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
