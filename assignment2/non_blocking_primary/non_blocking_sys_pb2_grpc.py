# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import non_blocking_sys_pb2 as non__blocking__sys__pb2


class RegistryServiceStub(object):
    """-------------------- Registry Server Service -------------------- //

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterServer = channel.unary_unary(
                '/non_blocking_primary_backup_sys.RegistryService/RegisterServer',
                request_serializer=non__blocking__sys__pb2.RegisterServerRequest.SerializeToString,
                response_deserializer=non__blocking__sys__pb2.RegisterServerResponse.FromString,
                )
        self.GetReplicaList = channel.unary_unary(
                '/non_blocking_primary_backup_sys.RegistryService/GetReplicaList',
                request_serializer=non__blocking__sys__pb2.GetReplicaListRequest.SerializeToString,
                response_deserializer=non__blocking__sys__pb2.GetReplicaListResponse.FromString,
                )


class RegistryServiceServicer(object):
    """-------------------- Registry Server Service -------------------- //

    """

    def RegisterServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReplicaList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RegistryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterServer': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterServer,
                    request_deserializer=non__blocking__sys__pb2.RegisterServerRequest.FromString,
                    response_serializer=non__blocking__sys__pb2.RegisterServerResponse.SerializeToString,
            ),
            'GetReplicaList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReplicaList,
                    request_deserializer=non__blocking__sys__pb2.GetReplicaListRequest.FromString,
                    response_serializer=non__blocking__sys__pb2.GetReplicaListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'non_blocking_primary_backup_sys.RegistryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RegistryService(object):
    """-------------------- Registry Server Service -------------------- //

    """

    @staticmethod
    def RegisterServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/non_blocking_primary_backup_sys.RegistryService/RegisterServer',
            non__blocking__sys__pb2.RegisterServerRequest.SerializeToString,
            non__blocking__sys__pb2.RegisterServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReplicaList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/non_blocking_primary_backup_sys.RegistryService/GetReplicaList',
            non__blocking__sys__pb2.GetReplicaListRequest.SerializeToString,
            non__blocking__sys__pb2.GetReplicaListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ServerServiceStub(object):
    """-------------------- Replica Server Service -------------------- //

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NotifyPrimary = channel.unary_unary(
                '/non_blocking_primary_backup_sys.ServerService/NotifyPrimary',
                request_serializer=non__blocking__sys__pb2.NotifyPrimaryRequest.SerializeToString,
                response_deserializer=non__blocking__sys__pb2.NotifyPrimaryResponse.FromString,
                )
        self.ClientWriteReplica = channel.unary_unary(
                '/non_blocking_primary_backup_sys.ServerService/ClientWriteReplica',
                request_serializer=non__blocking__sys__pb2.ClientWriteReplicaRequest.SerializeToString,
                response_deserializer=non__blocking__sys__pb2.ClientWriteReplicaResponse.FromString,
                )
        self.ForwardWritePrimary = channel.unary_unary(
                '/non_blocking_primary_backup_sys.ServerService/ForwardWritePrimary',
                request_serializer=non__blocking__sys__pb2.ForwardWritePrimaryRequest.SerializeToString,
                response_deserializer=non__blocking__sys__pb2.ForwardWritePrimaryResponse.FromString,
                )
        self.PrimaryWriteReplica = channel.unary_unary(
                '/non_blocking_primary_backup_sys.ServerService/PrimaryWriteReplica',
                request_serializer=non__blocking__sys__pb2.PrimaryWriteReplicaRequest.SerializeToString,
                response_deserializer=non__blocking__sys__pb2.PrimaryWriteReplicaResponse.FromString,
                )
        self.ClientReadReplica = channel.unary_unary(
                '/non_blocking_primary_backup_sys.ServerService/ClientReadReplica',
                request_serializer=non__blocking__sys__pb2.ClientReadReplicaRequest.SerializeToString,
                response_deserializer=non__blocking__sys__pb2.ClientReadReplicaResponse.FromString,
                )
        self.ClientDeleteReplica = channel.unary_unary(
                '/non_blocking_primary_backup_sys.ServerService/ClientDeleteReplica',
                request_serializer=non__blocking__sys__pb2.ClientDeleteReplicaRequest.SerializeToString,
                response_deserializer=non__blocking__sys__pb2.ClientDeleteReplicaResponse.FromString,
                )
        self.ForwardDeletePrimary = channel.unary_unary(
                '/non_blocking_primary_backup_sys.ServerService/ForwardDeletePrimary',
                request_serializer=non__blocking__sys__pb2.ForwardDeletePrimaryRequest.SerializeToString,
                response_deserializer=non__blocking__sys__pb2.ForwardDeletePrimaryResponse.FromString,
                )
        self.PrimaryDeleteReplica = channel.unary_unary(
                '/non_blocking_primary_backup_sys.ServerService/PrimaryDeleteReplica',
                request_serializer=non__blocking__sys__pb2.PrimaryDeleteReplicaRequest.SerializeToString,
                response_deserializer=non__blocking__sys__pb2.PrimaryDeleteReplicaResponse.FromString,
                )


class ServerServiceServicer(object):
    """-------------------- Replica Server Service -------------------- //

    """

    def NotifyPrimary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClientWriteReplica(self, request, context):
        """--- Write Related RPC ----
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForwardWritePrimary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrimaryWriteReplica(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClientReadReplica(self, request, context):
        """--- Read  Related RPC ----
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClientDeleteReplica(self, request, context):
        """--- Delete Related RPC ---
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForwardDeletePrimary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrimaryDeleteReplica(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NotifyPrimary': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyPrimary,
                    request_deserializer=non__blocking__sys__pb2.NotifyPrimaryRequest.FromString,
                    response_serializer=non__blocking__sys__pb2.NotifyPrimaryResponse.SerializeToString,
            ),
            'ClientWriteReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.ClientWriteReplica,
                    request_deserializer=non__blocking__sys__pb2.ClientWriteReplicaRequest.FromString,
                    response_serializer=non__blocking__sys__pb2.ClientWriteReplicaResponse.SerializeToString,
            ),
            'ForwardWritePrimary': grpc.unary_unary_rpc_method_handler(
                    servicer.ForwardWritePrimary,
                    request_deserializer=non__blocking__sys__pb2.ForwardWritePrimaryRequest.FromString,
                    response_serializer=non__blocking__sys__pb2.ForwardWritePrimaryResponse.SerializeToString,
            ),
            'PrimaryWriteReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.PrimaryWriteReplica,
                    request_deserializer=non__blocking__sys__pb2.PrimaryWriteReplicaRequest.FromString,
                    response_serializer=non__blocking__sys__pb2.PrimaryWriteReplicaResponse.SerializeToString,
            ),
            'ClientReadReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.ClientReadReplica,
                    request_deserializer=non__blocking__sys__pb2.ClientReadReplicaRequest.FromString,
                    response_serializer=non__blocking__sys__pb2.ClientReadReplicaResponse.SerializeToString,
            ),
            'ClientDeleteReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.ClientDeleteReplica,
                    request_deserializer=non__blocking__sys__pb2.ClientDeleteReplicaRequest.FromString,
                    response_serializer=non__blocking__sys__pb2.ClientDeleteReplicaResponse.SerializeToString,
            ),
            'ForwardDeletePrimary': grpc.unary_unary_rpc_method_handler(
                    servicer.ForwardDeletePrimary,
                    request_deserializer=non__blocking__sys__pb2.ForwardDeletePrimaryRequest.FromString,
                    response_serializer=non__blocking__sys__pb2.ForwardDeletePrimaryResponse.SerializeToString,
            ),
            'PrimaryDeleteReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.PrimaryDeleteReplica,
                    request_deserializer=non__blocking__sys__pb2.PrimaryDeleteReplicaRequest.FromString,
                    response_serializer=non__blocking__sys__pb2.PrimaryDeleteReplicaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'non_blocking_primary_backup_sys.ServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServerService(object):
    """-------------------- Replica Server Service -------------------- //

    """

    @staticmethod
    def NotifyPrimary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/non_blocking_primary_backup_sys.ServerService/NotifyPrimary',
            non__blocking__sys__pb2.NotifyPrimaryRequest.SerializeToString,
            non__blocking__sys__pb2.NotifyPrimaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClientWriteReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/non_blocking_primary_backup_sys.ServerService/ClientWriteReplica',
            non__blocking__sys__pb2.ClientWriteReplicaRequest.SerializeToString,
            non__blocking__sys__pb2.ClientWriteReplicaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForwardWritePrimary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/non_blocking_primary_backup_sys.ServerService/ForwardWritePrimary',
            non__blocking__sys__pb2.ForwardWritePrimaryRequest.SerializeToString,
            non__blocking__sys__pb2.ForwardWritePrimaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrimaryWriteReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/non_blocking_primary_backup_sys.ServerService/PrimaryWriteReplica',
            non__blocking__sys__pb2.PrimaryWriteReplicaRequest.SerializeToString,
            non__blocking__sys__pb2.PrimaryWriteReplicaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClientReadReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/non_blocking_primary_backup_sys.ServerService/ClientReadReplica',
            non__blocking__sys__pb2.ClientReadReplicaRequest.SerializeToString,
            non__blocking__sys__pb2.ClientReadReplicaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClientDeleteReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/non_blocking_primary_backup_sys.ServerService/ClientDeleteReplica',
            non__blocking__sys__pb2.ClientDeleteReplicaRequest.SerializeToString,
            non__blocking__sys__pb2.ClientDeleteReplicaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForwardDeletePrimary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/non_blocking_primary_backup_sys.ServerService/ForwardDeletePrimary',
            non__blocking__sys__pb2.ForwardDeletePrimaryRequest.SerializeToString,
            non__blocking__sys__pb2.ForwardDeletePrimaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrimaryDeleteReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/non_blocking_primary_backup_sys.ServerService/PrimaryDeleteReplica',
            non__blocking__sys__pb2.PrimaryDeleteReplicaRequest.SerializeToString,
            non__blocking__sys__pb2.PrimaryDeleteReplicaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
